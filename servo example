#include <bot_credentials.h>
#include <memory_constraints.h>
#include <twitch_irc_api.h> //this library needs the ArduinoWebsockets library to work, so be sure to add it. https://github.com/Links2004/arduinoWebSockets
#include <ESP8266WiFi.h>
#include <Servo.h>

#define TOWER_SMASHER_REWARD_ID "" //add your custom reward id here. This can be found by selecting manage reward request in your twitch creator dashboard. Note this is only available for affiliates or partners

//Twitch Api Instance
TwitchWebsocketIRC twitch_api;

Servo servo1;
int servoCount = 0;
int servoOffset = 110;

const char* ssid = ""; //Entered in bot_credentials.h
const char* password = ""; //Entered in bot_credentials.h

/* Generic Callback Functions */

void onCustomRewardCallback(PrivMsg data) {
  if (strcmp(data.custom_reward_id, TOWER_SMASHER_REWARD_ID) == 0) {
    //Have custom message id
    int randNumber = random(0, 26);
    int deck[] = {2, 2, 2, 2, 2, 2, 2, 2, 2, 5, 5, 5, 5, 5, 5, 5, 5, 5, 10, 10, 20, 20, 30, 30, 30, 70, 80};

    Serial.println(deck[randNumber]);

    servoCount += deck[randNumber];

    servo1.write(servoCount + servoOffset);
    Serial.println("servo1.write()");
    delay (100);

    if (servoCount + servoOffset >= 200)
    {
      twitch_api.send_chat_message("!boom");
      delay (1000);
      twitch_api.send_chat_message("!lights");

      delay (800);
      servo1.write(35);
      servoCount = 0;
      delay (2000);
      servo1.write(110);
    }

    //Custom Reward Id
    Serial.print("Custom Reward Id:");
    Serial.println(data.custom_reward_id);
  }//Add here

}

void setup() {
  // Connect to wifi
  WiFi.begin(ssid, password);

  // Check if connected to wifi
  while (WiFi.status() != WL_CONNECTED) {
    delay(2000);
  }

  Serial.begin(9600);
  Serial.println("Connected to Wifi.");

  servo1.attach(12);
  servo1.write(110);
  delay(100);

  //Connect to twitch via websockets
  twitch_api.connect_to_twitch_websocket();

  //Register custom callbacks
 
  twitch_api.onCustomReward(onCustomRewardCallback);

  //Helper Functions
  /*
    A sub plan is returned on subs, resub, gift, etc. You can use the helper function to convert int value to string.
  */
  printf("%s\n", twitch_api.sub_type_to_string(0));
  printf("%s\n", twitch_api.sub_type_to_string(1000));
  printf("%s\n", twitch_api.sub_type_to_string(2000));
  printf("%s\n", twitch_api.sub_type_to_string(3000));
  /*
    Emotes are returned when people say them in chat or in messages when donating. You can use the function to get the image url of the icon.
    Sizes: IMG_SMALL, IMG_MEDIUM, IMG_LARGE
  */
  printf("Emote Image URL: %s\n", twitch_api.get_emote_image_url(301448586, TwitchWebsocketIRC::Emote_Image_Size::IMG_MEDIUM));
}

void loop() {
  if (twitch_api.available()) {
    twitch_api.poll();
  }
  delay(500);
}
